# big_o_notation
This repo explains the Big O Notation and its complexities. 

###Contributors 
* Beth Mwangi
* Marcus Muasa
* Dennis Githua

Big O references how **complex** an algorithm is.
Big O is the way of measuring the efficiency of an algorithm and how well it scales based on the size of the dataset.
let's say you have 20 items and you want to sort them out. One can use alot of algorithms to sort them out, however not all algorithms are built equally. 
Some algorithms are more complex than others.
This is where the big O comes in.Since it measures the worst case senarios and can be used to describe the execution time required or the space used (e.g. in memory or on disk) by an algorithm.
Efficiency covers the following;
 *CPU (time) usage
 *Disk usage
 *Memory usage
 *Network usage
